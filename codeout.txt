ControlPanel.js:

import React from 'react';

const ControlPanel = ({
  handleNewParagraph,
  handleIntervalToggle,
  handleNextClick,
  handlePrevClick,
  wpm,
  setWpm,
  time,
  intervalIsRunning,
  isLinear,
  setIsLinear,
}) => {
  return (
    <div className="bg-white p-4 shadow-md">
      <div className="flex flex-wrap justify-center space-x-2">
        <button
          onClick={handleNewParagraph}
          className="text-lg p-2 rounded bg-blue-500 text-white hover:bg-blue-400"
        >
          New Paragraph
        </button>
        <button
          onClick={handleIntervalToggle}
          className="text-lg p-2 rounded bg-blue-500 text-white hover:bg-blue-400"
        >
          {intervalIsRunning ? 'Stop Interval' : 'Start Interval'}
        </button>
        <button
          onClick={() => setIsLinear(!isLinear)}
          className="text-lg p-2 rounded bg-blue-500 text-white hover:bg-blue-400"
        >
          {isLinear ? 'Deactivate Linear' : 'Activate Linear'}
        </button>
        <button
          onClick={handlePrevClick}
          className="text-lg p-2 rounded bg-green-500 text-white hover:bg-green-400"
        >
          Zur√ºck
        </button>
        <button
          onClick={handleNextClick}
          className="text-lg p-2 rounded bg-green-500 text-white hover:bg-green-400"
        >
          Vor
        </button>
        <label className="text-lg p-2">Words per Minute:</label>
        <input
          type="number"
          min="50"
          max="1000"
          value={wpm}
          onChange={(e) => setWpm(e.target.value)}
          className="text-lg p-2 border rounded"
        />
        <h1 className="text-lg p-2 rounded bg-green-500 text-white hover:bg-green-400">
          Sekunden{time}
        </h1>
      </div>
    </div>
  );
};

export default ControlPanel;


index.js:

import React from 'react';
import ParagraphDisplay from './ParagraphDisplay';
import ControlPanel from './ControlPanel';
import useRandomParagraph from '../../hooks/useRandomParagraph';

const RandomParagraph = ({ data }) => {
  const {
    paragraphs,
    handleNewParagraph,
    handleIntervalToggle,
    handleNextClick,
    handlePrevClick,
    wpm,
    setWpm,
    time,
    intervalIsRunning,
    isLinear,
    setIsLinear,
  } = useRandomParagraph(data);

  return (
    <div className="flex flex-col h-full">
      <ParagraphDisplay paragraphs={paragraphs} />{' '}
      {/* Verwende paragraphs statt paragraph */}
      <ControlPanel
        handleNewParagraph={handleNewParagraph}
        // handleIntervalToggle={handleIntervalToggle} // Entferne oder definiere diese Prop
        handleNextClick={handleNextClick}
        handlePrevClick={handlePrevClick}
        wpm={wpm}
        setWpm={setWpm}
        time={time}
        intervalIsRunning={intervalIsRunning} // Entferne oder definiere diese Prop
        isLinear={isLinear} // Entferne oder definiere diese Prop
        setIsLinear={setIsLinear} // Entferne oder definiere diese Prop
      />
    </div>
  );
};

export default RandomParagraph;


ParagraphDisplay.js:

import React from 'react';

const ParagraphDisplay = ({ paragraphs }) => {
  return (
    <div className="overflow-y-scroll flex-grow">
      {paragraphs.map((paragraph, idx) => (
        <p
          key={idx}
          className={`text-5xl font-semibold text-center my-8 mx-10 leading-relaxed transition-opacity ${
            idx === 1 ? 'opacity-100' : 'opacity-50 text-gray-400'
          }`}
        >
          {paragraph}
        </p>
      ))}
    </div>
  );
};

export default ParagraphDisplay;




